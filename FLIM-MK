;;; -*-Emacs-Lisp-*-

;; FLIM-MK: installer for FLIM.

;;; Code:

(defun config-flim ()
  (let (prefix lisp-dir version-specific-lisp-dir)
    (and (setq prefix (car command-line-args-left))
	 (or (string-equal "NONE" prefix)
	     (defvar PREFIX prefix)))
    (setq command-line-args-left (cdr command-line-args-left))
    (and (setq lisp-dir (car command-line-args-left))
	 (or (string-equal "NONE" lisp-dir)
	     (defvar LISPDIR lisp-dir)))
    (setq command-line-args-left (cdr command-line-args-left))
    (and (setq version-specific-lisp-dir (car command-line-args-left))
	 (or (string-equal "NONE" version-specific-lisp-dir)
	     (progn
	       (defvar VERSION_SPECIFIC_LISPDIR version-specific-lisp-dir)
	       (princ (format "VERSION_SPECIFIC_LISPDIR=%s\n"
			      VERSION_SPECIFIC_LISPDIR)))))
    (setq command-line-args-left (cdr command-line-args-left))
    (and (setq package-lisp-dir (car command-line-args-left))
	 (or (string-equal "NONE" package-lisp-dir)
	     (progn
	       (defvar PACKAGE_LISPDIR
		 (if (boundp (intern package-lisp-dir))
		     (symbol-value (intern package-lisp-dir))
		   package-lisp-dir))
	       (princ (format "PACKAGE_LISPDIR=%s\n"
			      PACKAGE_LISPDIR)))))
    (setq command-line-args-left (cdr command-line-args-left))
    (load-file "FLIM-CFG")
    (load-file "FLIM-ELS")
    (princ (format "PREFIX=%s
LISPDIR=%s\n" PREFIX LISPDIR))))

(defun compile-flim ()
  (config-flim)
  (compile-elisp-modules flim-version-specific-modules ".")
  (compile-elisp-modules flim-modules "."))

(defun install-flim ()
  (config-flim)
  (if flim-version-specific-modules
      (install-elisp-modules flim-version-specific-modules "./"
			     FLIM_VERSION_SPECIFIC_DIR))
  (install-elisp-modules flim-modules "./" FLIM_DIR))

(defun check-flim ()
  (config-flim)
  (require 'lunit)
  (let ((files (directory-files "tests" t "^test-.*\\.el$"))
	(suite (lunit-make-test-suite)))
    (while files
      (if (file-regular-p (car files))
	  (progn
	    (load-file (car files))
	    (lunit-test-suite-add-test
	     suite (lunit-make-test-suite-from-class
		    (intern (file-name-sans-extension
			     (file-name-nondirectory (car files))))))))
      (setq files (cdr files)))
    (lunit suite)))

;;; FLIM-MK ends here
